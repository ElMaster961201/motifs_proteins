"""
Matriz de Hydrophobe Compatibility Matrix (HCM)
"""

HCIM = [
	
	# [20.0,14.8,11.9,11.8,11.4,11.2,09.6,08.5,07.9,07.1,06.4,06.3,05.4,04.8,04.6,03.9,02.6,02.4,02.1,01.0],
	# [14.8,20.0,17.1,17.0,16.6,16.4,14.8,13.7,13.1,12.3,11.6,11.5,10.6,10.0,09.8,09.1,07.8,07.6,07.3,06.2],
	# [11.9,17.1,20.0,19.8,19.5,19.3,17.7,16.6,16.0,15.1,14.5,14.3,13.4,12.8,12.7,11.9,10.7,10.5,10.1,09.1],
	# [11.8,17.0,19.8,20.0,19.6,19.5,17.8,16.8,16.1,15.3,14.7,14.5,13.6,13.0,12.8,12.1,10.9,10.7,10.3,09.2],
	# [11.4,16.6,19.5,19.6,20.0,19.8,18.2,17.1,16.5,15.7,15.0,14.9,14.0,13.4,13.2,12.5,11.2,11.0,10.7,09.6],
	# [11.2,16.4,19.3,19.5,19.8,20.0,18.4,17.3,16.7,15.9,15.2,15.0,14.1,13.5,13.4,12.7,11.4,11.2,10.9,09.8],
	# [09.6,14.8,17.7,17.8,18.2,18.4,20.0,18.9,18.3,17.5,16.8,16.6,15.8,15.2,15.0,14.3,13.0,12.8,12.5,11.4],
	# [08.5,13.7,16.6,16.8,17.1,17.3,18.9,20.0,19.4,18.5,17.9,17.7,16.8,16.2,16.1,15.3,14.1,13.9,13.5,12.5],
	# [07.9,13.1,16.0,16.1,16.5,16.7,18.3,19.4,20.0,19.2,18.5,18.4,17.5,16.9,16.7,16.0,14.7,14.5,14.2,13.1],
	# [07.1,12.3,15.1,16.3,16.7,16.9,17.6,18.5,19.2,20.0,19.3,19.2,18.3,17.7,17.5,16.8,15.5,15.4,15.0,13.9],
	# [06.4,11.6,14.5,14.7,15.0,15.2,16.8,17.9,18.5,19.3,20.0,19.8,18.9,18.4,18.2,17.5,16.2,16.0,15.7,14.6],
	# [06.3,11.5,14.3,14.5,14.9,15.0,16.6,17.7,18.4,19.2,19.8,20.0,19.1,18.5,18.3,17.6,16.4,16.2,15.8,14.7],
	# [05.4,10.6,13.4,13.6,14.0,14.1,15.8,16.8,17.5,18.3,18.9,19.1,20.0,19.4,19.2,18.5,17.3,17.1,16.7,15.6],
	# [04.8,10.0,12.8,13.0,13.4,13.5,15.2,16.2,16.9,17.7,18.4,18.5,19.4,20.0,19.8,19.1,17.8,17.7,17.3,16.2],
	# [04.6,09.8,12.7,12.8,13.2,13.4,15.0,16.1,16.7,17.5,18.2,18.3,19.2,19.8,20.0,19.3,18.0,17.8,17.5,16.4],
	# [03.9,09.1,11.9,12.1,12.5,12.7,14.3,15.3,16.0,16.8,17.5,17.6,18.5,19.1,19.3,20.0,18.7,18.6,18.2,17.1],
	# [02.6,07.8,10.7,10.9,11.2,11.4,13.0,14.1,14.7,15.5,16.2,16.4,17.3,17.8,18.0,18.7,20.0,19.8,19.5,18.4],
	# [02.4,07.6,10.5,10.7,11.0,11.2,12.8,13.9,14.5,15.4,16.0,16.2,17.1,17.7,17.8,18.6,19.8,20.0,19.6,18.6],
	# [02.1,07.3,10.1,10.3,10.7,10.9,12.5,13.5,14.2,15.0,15.7,15.8,16.7,17.3,17.5,18.2,19.5,19.6,20.0,18.9],
	# [01.0,06.2,09.1,09.2,09.6,09.8,11.4,12.5,13.1,13.9,14.6,14.7,15.6,16.2,16.4,17.1,18.4,18.6,18.9,20.0]
	
	]

CCIM = [
	
	# [00.9,02.0,06.4,07.2,07.4,07.8,07.8,07.9,08.0,08.3,08.4,08.6,08.6,08.6,08.6,08.6,09.8,12.4,17.5,19.9],
 #   	[02.0,03.0,06.9,07.6,07.8,08.1,08.2,08.2,08.3,08.6,08.7,08.8,08.8,08.8,08.8,08.9,09.9,12.3,16.8,19.0],
 #   	[06.4,06.9,08.9,09.3,09.4,09.5,09.5,09.6,09.6,09.8,09.8,09.9,09.9,09.9,09.9,09.9,10.4,11.6,14.0,15.1],
 #   	[07.2,07.6,09.3,09.6,09.6,09.8,09.8,09.8,09.9,10.0,10.0,10.1,10.1,10.1,10.1,10.1,10.5,11.5,13.4,14.4],
 #   	[07.4,07.8,09.4,09.6,09.7,09.8,09.9,09.9,09.9,10.0,10.1,10.1,10.1,10.1,10.1,10.2,10.6,11.5,13.3,14.2],
 #   	[07.8,08.1,09.5,09.8,09.8,10.0,10.0,10.0,10.0,10.1,10.2,10.2,10.2,10.2,10.2,10.2,10.6,11.4,13.1,13.9],
 #   	[07.8,08.2,09.5,09.8,09.9,10.0,10.0,10.0,10.1,10.1,10.2,10.2,10.2,10.2,10.2,10.3,10.6,11.4,13.1,13.8],
 #   	[07.9,08.2,09.6,09.8,09.9,10.0,10.0,10.0,10.1,10.2,10.2,10.2,10.2,10.2,10.2,10.3,10.6,11.4,13.0,13.8],
 #   	[08.0,08.3,09.6,09.9,09.9,10.0,10.1,10.1,10.1,10.2,10.2,10.3,10.3,10.3,10.3,10.3,10.6,11.4,12.9,13.7],
 #   	[08.3,08.6,09.8,10.0,10.0,10.1,10.1,10.2,10.2,10.3,10.3,10.3,10.3,10.4,10.4,10.4,10.7,11.4,12.7,13.4],
 #   	[08.4,08.7,09.8,10.0,10.1,10.2,10.2,10.2,10.2,10.3,10.3,10.4,10.4,10.4,10.4,10.4,10.7,11.4,12.7,13.3],
 #   	[08.6,08.8,09.9,10.1,10.1,10.2,10.2,10.2,10.3,10.3,10.4,10.4,10.4,10.4,10.4,10.4,10.7,11.3,12.6,13.2],
 #   	[08.6,08.8,09.9,10.1,10.1,10.2,10.2,10.2,10.3,10.3,10.4,10.4,10.4,10.4,10.4,10.4,10.7,11.3,12.6,13.2],
 #   	[08.6,08.8,09.9,10.1,10.1,10.2,10.2,10.2,10.3,10.4,10.4,10.4,10.4,10.4,10.4,10.4,10.7,11.3,12.6,13.2],
 #   	[08.6,08.8,09.9,10.1,10.1,10.2,10.2,10.2,10.3,10.4,10.4,10.4,10.4,10.4,10.4,10.4,10.7,11.3,12.6,13.2],
 #   	[08.6,08.9,09.9,10.1,10.2,10.2,10.3,10.3,10.3,10.4,10.4,10.4,10.4,10.4,10.4,10.4,10.7,11.3,12.5,13.1],
 #   	[09.8,09.9,10.4,10.5,10.6,10.6,10.6,10.6,10.6,10.7,10.7,10.7,10.7,10.7,10.7,10.7,10.8,11.2,11.8,12.1],
 #   	[12.4,12.3,11.6,11.5,11.5,11.4,11.4,11.4,11.4,11.4,11.4,11.3,11.3,11.3,11.3,11.3,11.2,10.8,10.1,09.8],
 #   	[17.5,16.8,14.0,13.4,13.3,13.1,13.1,13.0,12.9,12.7,12.7,12.6,12.6,12.6,12.6,12.5,11.8,10.1,06.8,05.2],
 #   	[19.9,19.0,15.1,14.4,14.2,13.9,13.8,13.8,13.7,13.4,13.3,13.2,13.2,13.2,13.2,13.1,12.1,09.8,05.2,03.1]
	
	]

SCIM = []

HM = [
	-3.0,	# -55,#Asp -> D
	-2.6,	# -31,#Glu -> E
	0.2,	# 49, #Cys -> C
	-2.7,	# -28,#Asn -> N
	2.5,	# 100,#Phe -> F
	-2.9,	# -10,#Gln -> Q
	0.1,	# 63, #Tyr -> Y
	-1.1,	# -5, #Ser -> S
	1.1,	# 74, #Met -> M
	-0.8,	# 13, #Thr -> T
	3.1,	# 99, #Ile -> I
	0.7,	# 0,	#Gly -> G
	2.3,	# 76, #Val -> V
	1.5,	# 97, #Trp -> W
	2.2,	# 97, #Leu -> L
	1.0,	# 41, #Ala -> A
	-0.3,	# -46,#Pro -> P
	-1.7,	# 8, 	#His -> H
	-4.6,	# -23,#Lys -> K
	-7.5	# -14 #Arg -> R
	]

pl = [
	2.77, #Asp -> D
	3.22, #Glu -> E
	5.07, #Cys -> C
	5.41, #Asn -> N
	5.48, #Phe -> F
	5.65, #Gln -> Q
	5.66, #Tyr -> Y
	5.68, #Ser -> S
	5.74, #Met -> M
	5.60, #Thr -> T
	6.02, #Ile -> I
	5.97, #Gly -> G
	5.96, #Val -> V
	5.89, #Trp -> W
	5.98, #Leu -> L
	6.00, #Ala -> A
	6.30, #Pro -> P
	7.59, #His -> H
	9.74, #Lys -> K
	10.76 #Arg -> R
	]

MW = [
	133.10, #Asp -> D
	147.13, #Glu -> E
	121.16, #Cys -> C 
	132.12, #Asn -> N 
	165.19, #Phe -> F 
	146.14, #Gln -> Q 
	181.19, #Tyr -> Y
	105.09, #Ser -> S
	149.21, #Met -> M
	119.12, #Thr -> T
	131.17, #Ile -> I
	075.07, #Gly -> G
	119.15, #Val -> V
	204.23, #Trp -> W
	131.17, #Leu -> L
	089.09, #Ala -> A
	115.13, #Pro -> P
	155.15, #His -> H
	146.19, #Lys -> K
	0174.20 #Arg -> R
	]

def generaHCI(A,B):

	hci = 20 - abs((HM[A]-HM[B])*(19/10.6))
	return hci
	pass

def generaCCI(A,B):

	cci = 11 - ((pl[A]-7)*(pl[B]-7)*(19/33.8))
	return cci
	pass

def generaSCI(A,B):

	sci = 20 - abs((MW[A]+MW[B]-123)*(19/135))
	return sci 
	pass

def imprimeMatrix(Matrix):
	for y in Matrix:
		print("[", end="")
		for x in y:
			print('{0:.3f}'.format(x), end=",")
			pass
		print("]")
		pass
	pass

for x in range(0,20):
	# print(x)
	aux1 = []
	aux2 = []
	aux3 = []
	for y in range(0,20):
		aux1.append(generaSCI(x,y))
		aux2.append(generaCCI(x,y))
		aux3.append(generaHCI(x,y))
		pass
	SCIM.append(aux1)
	CCIM.append(aux2)
	HCIM.append(aux3)
	pass


print("SCIM")
imprimeMatrix(SCIM)

print()

print("CCIM")
imprimeMatrix(CCIM)
print()

print("HCIM")
imprimeMatrix(HCIM)
# print(HCIM)





